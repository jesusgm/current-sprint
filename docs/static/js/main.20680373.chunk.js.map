{"version":3,"sources":["App.js","index.js"],"names":["App","d","Date","UTC","getFullYear","getMonth","getDate","setUTCDate","getUTCDate","getUTCDay","yearStart","getUTCFullYear","weekNo","Math","ceil","slice","getWeekNumber","fullYear","weekNumber","sprint","num","size","toString","length","pad","dateStart","moment","isoWeek","startOf","dateEnd","endOf","day","dateStartStr","format","dateEndStr","daysToEnd","diff","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPA4DeA,MAxDf,WAeE,IAAI,EAdJ,SAAuBC,IAErBA,EAAI,IAAIC,KAAKA,KAAKC,IAAIF,EAAEG,cAAeH,EAAEI,WAAYJ,EAAEK,aAGrDC,WAAWN,EAAEO,aAAe,GAAKP,EAAEQ,aAAe,IAEpD,IAAIC,EAAY,IAAIR,KAAKA,KAAKC,IAAIF,EAAEU,iBAAkB,EAAG,IAErDC,EAASC,KAAKC,OAAOb,EAAIS,GAAa,MAAW,GAAK,GAE1D,MAAO,CAAC,UAAGT,EAAEG,eAAgBW,MAAM,GAAIH,GAGZI,CAAc,IAAId,MAA/C,mBAAKe,EAAL,KAAeC,EAAf,KAQMC,EAAM,UAAMF,EAAN,YANZ,SAAaG,EAAKC,GAEhB,IADAD,EAAMA,EAAIE,WACHF,EAAIG,OAASF,GAAMD,EAAM,IAAMA,EACtC,OAAOA,EAGqBI,CAC5BN,EAAa,IAAM,EAAIA,EAAaA,EAAa,EACjD,IAGIO,EAAYC,MACfC,QAAQT,EAAa,IAAM,EAAIA,EAAa,EAAIA,GAChDU,QAAQ,WACLC,EAAUH,MACbC,QAAQT,EAAa,IAAM,EAAIA,EAAaA,EAAa,GACzDY,MAAM,WACNC,KAAK,GAEFC,EAAeP,EAAUQ,OAAO,cAChCC,EAAaL,EAAQI,OAAO,cAE5BE,EAAYN,EAAQO,KAAKV,MAAU,QAEzC,OACE,sBAAKW,UAAU,MAAf,UACE,6BAAKlB,IACL,sBAAKkB,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SAA6BL,IAC7B,qBAAKK,UAAU,YAAf,iBACA,qBAAKA,UAAU,WAAf,SAA2BH,OAE7B,sBAAKG,UAAS,2BAAsBF,GAApC,uDACuCA,S,MChD7CG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.20680373.chunk.js","sourcesContent":["import moment from \"moment\";\n\nimport \"./App.css\";\n\nfunction App() {\n  function getWeekNumber(d) {\n    // Copy date so don't modify original\n    d = new Date(Date.UTC(d.getFullYear(), d.getMonth(), d.getDate()));\n    // Set to nearest Thursday: current date + 4 - current day number\n    // Make Sunday's day number 7\n    d.setUTCDate(d.getUTCDate() + 4 - (d.getUTCDay() || 7));\n    // Get first day of year\n    var yearStart = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\n    // Calculate full weeks to nearest Thursday\n    var weekNo = Math.ceil(((d - yearStart) / 86400000 + 1) / 7);\n    // Return array of year and week number\n    return [`${d.getFullYear()}`.slice(2), weekNo];\n  }\n\n  var [fullYear, weekNumber] = getWeekNumber(new Date());\n\n  function pad(num, size) {\n    num = num.toString();\n    while (num.length < size) num = \"0\" + num;\n    return num;\n  }\n\n  const sprint = `${fullYear}_${pad(\n    weekNumber % 2 === 0 ? weekNumber : weekNumber + 1,\n    2\n  )}`;\n\n  const dateStart = moment()\n    .isoWeek(weekNumber % 2 === 0 ? weekNumber - 1 : weekNumber)\n    .startOf(\"isoWeek\");\n  const dateEnd = moment()\n    .isoWeek(weekNumber % 2 === 0 ? weekNumber : weekNumber + 1)\n    .endOf(\"isoWeek\")\n    .day(-2);\n\n  const dateStartStr = dateStart.format(\"DD/MM/YYYY\");\n  const dateEndStr = dateEnd.format(\"DD/MM/YYYY\");\n\n  const daysToEnd = dateEnd.diff(moment(), \"days\");\n\n  return (\n    <div className=\"App\">\n      <h1>{sprint}</h1>\n      <div className=\"dates\">\n        <div className=\"date-start\">{dateStartStr}</div>\n        <div className=\"separator\"> - </div>\n        <div className=\"date-end\">{dateEndStr}</div>\n      </div>\n      <div className={`days-to-end days-${daysToEnd}`}>\n        Días hasta finalización del sprint: {daysToEnd}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}